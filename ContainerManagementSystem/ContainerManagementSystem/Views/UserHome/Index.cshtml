@model ContainerManagementSystem.Models.UserHomeModel
@{

	ViewBag.Title = "Container Page";
}
@{
	Layout = "~/Views/Shared/_Layout2.cshtml";
}
<link rel="stylesheet" type="text/css" href="http://cdn.datatables.net/1.10.16/css/dataTables.jqueryui.min.css">
<link rel="stylesheet" type="text/css" href="http://cdn.datatables.net/responsive/2.2.1/css/responsive.dataTables.min.css">


<header class="masthead text-white text-center">
	<div align="right" style="padding:10px">

		<a href="~/Home/Index" onclick="ClearData()" style=" width:100px; height:40px; padding-top:8px; margin-bottom:20px; margin-top:20px; font-size:larger; color:black">
			Logout
		</a>
	</div>

</header>
<h2>ContainerList Details</h2>


<div class="row" id="Search">

	<div class="form-group">
		@Html.Label("Search", htmlAttributes: new { @class = "control-label col-md-1" })

		<div class="col-md-9 has-feedback">
			@Html.DropDownListFor(model => Model.DepartureFrom, new SelectList(Model.Departure, "Value", "Text"), htmlAttributes: new { @required = "required", @class = "form-control", @id = "SearchItem" })
			@Html.ValidationMessageFor(model => Model.DepartureFrom, "", new { @class = "text-danger" })
			<div style="padding-top:10px;">
			<input type="submit" class="btn btn-primary btn-block" value="Search" onclick="GetSearch();" style="width:150px;">
			</div>
		</div>
		</div>

	</div>

<style>
	.img-responsive {
		width: 100%;
		height: auto;
	}

	.btn btn-primary btn-lg {
		padding: 15px 32px;
		text-align: center;
		text-decoration: none;
		display: inline-block;
		font-size: 16px;
		margin: 10px 2px;
		margin-top: auto;
		cursor: pointer;
	}
</style>



@section Scripts{

	<script src="~/Scripts/jquery.1.js"></script>
	<script src="~/Scripts/datatable.js"></script>
	<script src="https://cdn.datatables.net/1.10.16/js/dataTables.jqueryui.min.js"></script>
	<script src="https://cdn.datatables.net/responsive/2.2.1/js/dataTables.responsive.min.js"></script>
	<script type="text/javascript">

		$(document).ready(function () {
			ClearData();
			$('#Container').DataTable({
				ajax: {
					responsive: true,
					url: '/UserHome/UserHomeContainer',
					dataSrc: ''
				},
				columns: [
					{ data: 'SN', 'bSortable': false },
					{ data: 'ContainerName', "autoWidth": true },
					{ data: 'CountryName', "autoWidth": true },
					{ data: 'Status', "autoWidth": true },
				]


			});
			$('#Shipment').DataTable({
				ajax: {
					responsive: true,
					url: '/UserHome/ViewShipment?UserID=' + @TempData["ID"],
					dataSrc: ''
				},
				columns: [
					{ data: 'SN', 'bSortable': false },
					{ data: 'ContainerName', "autoWidth": true },
					{ data: 'ShipmentTitle', "autoWidth": true },
					{ data: 'DepartureFrom', "autoWidth": true },
					{ data: 'ArrivalTO', "autoWidth": true },
					{ data: 'DepartureDate', "autoWidth": true },
					{ data: 'ArrivalDate', "autoWidth": true },
					{ data: 'OrderDate', "autoWidth": true },
					{ data: 'Status', "autoWidth": true },
				]


			});


		});
		function GetDetailById(id) {
			$.get("/UserHome/DetailByID?id=" + id, function (data, status) {
				$("#ContainerID").val(data.ContainerID);
				$("#ContainerName").val(data.ContainerName);
				$("#CountryName").val(data.CountryName);
				$("#Status").val(data.Status);
			});
		}
				function GetSearch() {
					var SearchItem = $("#SearchItem").val();
					if (SearchItem == "") {
						$("#SearchItem").focus();
						return false;
					}

					var table = $('#Container').DataTable();
					table.destroy();

					$('#Container').DataTable({

						ajax: {
							responsive: true,
							url: '/UserHome/SearchContainer?SearchItem=' + SearchItem,
							dataSrc: ''
						},
						columns: [
							{ data: 'SN', 'bSortable': false },
							{ data: 'ContainerName', "autoWidth": true },
							{ data: 'CountryName', "autoWidth": true },
							{ data: 'Status', "autoWidth": true },
						]

					});
				};

		function ClearData() {
			$("#SN").val("");
			$("#ContainerName").val("");
			$("#CountryName").val("");
			$("#Status").val("");
		}
	</script>
}
<hr />


<div class="widget-content padded clearfix">
	<table id="Container" class="table table-bordered table-striped dataTable no-footer table-hover display"
		   cellspacing="0">
		<thead>
			<tr>
				<th>SN</th>
				<th>
					ContainerName
				</th>
				<th>
					Country
				</th>
				<th>
					Status
				</th>
			</tr>
		</thead>
	</table>
</div>
<hr />

<h2>Shipment Details</h2>
@if (TempData["Success"] != null)
{
	<p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
}
<input id="hfID" type="hidden" />
<div class="widget-content padded clearfix">
	<table id="Shipment" class="table table-bordered table-striped dataTable no-footer table-hover display"
		   cellspacing="0">
		<thead>
			<tr>
				<th>SN</th>
				<th>ContainerName</th>
				<th>Shipment</th>
				<th>Departure</th>
				<th>Arrival</th>
				<th>DepartureDate</th>
				<th>ArrivalDate</th>
				<th>OrderDate</th>
				<th>Status</th>
			</tr>
		</thead>
	</table>
</div>

<div class="modal fade" id="AddModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
	 style="display: none;" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<h4 class="modal-title" id="myModalLabel">
					Booking Setup
				</h4>
			</div>

			@using (Html.BeginForm("save", "UserHome", FormMethod.Post, new { @class = "form-horizontal", @role = "form", @id = "UserHome" }))
			{

				@Html.AntiForgeryToken()
				@Html.HiddenFor(model => model.UserID,new { @Value=@TempData["ID"]})
				@Html.HiddenFor(model => model.ContainerID)

				<div class="modal-body">
					<div class="form-horizontal">

						<div class="form-group">
							@Html.LabelFor(model => Model.DepartureFrom, htmlAttributes: new { @class = "control-label col-md-3" })
							<div class="col-md-9 has-feedback">
								@Html.DropDownListFor(model => Model.DepartureFrom, new SelectList(Model.Departure, "Value", "Text"), htmlAttributes: new { @required = "required", @class = "form-control" })
								@Html.ValidationMessageFor(model => Model.DepartureFrom, "", new { @class = "text-danger" })

							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => Model.ArrivalTO, htmlAttributes: new { @class = "control-label col-md-3" })
							<div class="col-md-9 has-feedback">
								@Html.DropDownListFor(model => Model.ArrivalTO, new SelectList(Model.Destination, "Value", "Text"), htmlAttributes: new { @required = "required", @class = "form-control" })
								@Html.ValidationMessageFor(model => Model.ArrivalTO, "", new { @required = "required", @class = "text-danger" })
							</div>
						</div>


						<div class="form-group">
							@Html.LabelFor(model => model.DepartureDate, htmlAttributes: new { @class = "control-label col-md-3" })
							<div class="col-md-9 has-feedback">
								@Html.TextBoxFor(model => Model.DepartureDate, htmlAttributes: new { @required = "required", @class = "form-control" })
								@Html.ValidationMessageFor(model => model.DepartureDate, "", new { @class = "text-danger" })

							</div>
						</div>


						<div class="form-group">
							@Html.LabelFor(model => model.ArrivalDate, htmlAttributes: new { @class = "control-label col-md-3" })
							<div class="col-md-9 has-feedback">
								@Html.TextBoxFor(model => Model.ArrivalDate, htmlAttributes: new { @required = "required", @class = "form-control" })
								@Html.ValidationMessageFor(model => model.ArrivalDate, "", new { @class = "text-danger" })

							</div>
						</div>

						<div class="modal-footer">

							<button type="button" class="btn btn-default" data-dismiss="modal" id="btnClose">
								Close
							</button>

							<button type="submit" class="btn btn-primary"> Book</button>

						</div>

					</div>

				</div>
			}
		</div>
	</div>
</div>
